# -*- coding: utf-8 -*-
"""Healthcare.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ynBln8xqQCC7OLsva-RMY6s6kzFbhTIe
"""

import pandas as pd

df=pd.read_csv('/content/healthcare_dataset.csv')

df.info()

df.shape

df.columns

pd.set_option('display.max_column',15)

pd.set_option('display.max_rows',15)

df.iloc[[1,2],2]

df.loc[40:45,'Name':'Medical Condition']

filt=(df['Name']=='Miguel Baker')& (df['Medical Condition']=='Arthritis')

df[filt]

filt=(df['Name']=='Miguel Baker')| (df['Medical Condition']=='Arthritis')

df[filt]

df['Age']=df['Age'] . astype (int)

highage=df['Age']>=70

df[highage]

df.loc[highage,['Name','Hospital']]

results=('Normal','abnormal')

filt=df['Test Results'] .isin (results)

df.loc[filt]

df.columns=[x.lower() for x in df.columns]

df.rename(columns=({'name':'Name'}))

df.loc[2,'Name']='eric'

df.loc[2,['name','hospital']]=('eric','idk')

df.loc[2]

df['hospital'].str.lower()

len(df['Name'])

df['age'].min()

df.rename(columns=({'Name':'name'}))

df['age'].max()

df['age'].mean()

df['age'].median()

df['name']+' '+df['age'] . astype (str)

df.drop(columns=['name','age'])

df.append({'name':'morty'},ignore_index=True)

df.append({'name':'nick'},ignore_index=True)

df.sort_values(by='name')

df.sort_values(by=['name','hospital'])

df.sort_values(by=['name','age'],ascending=[True,False])

df.nlargest(10,'age')

df.nsmallest(10,'age')

df['room number'].value_counts()

df['medical condition'].value_counts()

df['gender'].value_counts(normalize=True)

df.groupby('medication')

medicationgrp=df.groupby('medication')

medicationgrp.get_group('Penicillin')

filt=df['blood type']=='A+'

df.loc[filt]

df.loc[filt]['medical condition'].value_counts(normalize=True)

medicationgrp['medical condition'].value_counts()

filt=df.groupby('blood type')

filt.get_group('A+')

filt['doctor'].value_counts().loc['B+']

filt['age'].median()

import numpy as np

df.dropna()

df.fillna(0)

df.replace('NA',np.nan,inplace=True)

df

df.nunique()

df.isnull()

df.isna()

df.dropna(axis='index',how='any')

df.dropna(axis='index',how='all')

df['date of admission']

df['date of admission']= pd.to_datetime(df['date of admission'])

df.loc['date of admission']='2022-07-29'

df['date of admission'].max()

df['date of admission'].min()

df['date of admission']>='2019-01-09'

df.columns

df['name'].replace({'Tiffany Ramirez':'idk'})

import matplotlib.pyplot as plt

df.replace('NAN',0,inplace=True)

df.drop(index='date of admission', axis=0, inplace=True)

df.tail()

import matplotlib.pyplot as plt

age=df['age']
medication=df['medical condition']
plt.scatter(age,medication)
plt.xlabel('age')
plt.ylabel('medication')
plt.title('age vs medication')
plt.show()

plt.figure(figsize=(8, 6))
df.groupby(['gender', 'admission type']).size().unstack().plot(kind='bar', stacked=False)
plt.xlabel('Gender')
plt.ylabel('Number of Admissions')
plt.title('Bar Chart of Gender vs. Admission Type')
plt.grid(axis='y')
plt.show()

plt.figure(figsize=(8, 8))
df['medical condition'].value_counts().plot(kind='pie', autopct='%1.1f%%')
plt.title('Pie Chart of Medical Condition Distribution')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(df['billing amount'], bins=10)
plt.xlabel('Billing Amount')
plt.ylabel('Frequency')
plt.title('Histogram of Billing Amount Distribution')
plt.grid(True)
plt.show()

from wordcloud import WordCloud

medications = df['medication'].value_counts()
wordcloud = WordCloud(background_color='white').generate_from_frequencies(medications)

plt.figure(figsize=(8, 8))
plt.imshow(wordcloud)
plt.axis('off')
plt.title('Word Cloud of Medication Distribution')
plt.show()

plt.figure(figsize=(10, 6))
df.groupby('hospital')['billing amount'].sum().plot(kind='area', stacked=False)
plt.xlabel('Hospital')
plt.ylabel('Total Billing Amount')
plt.title('Area Chart of Billing Amount per Hospital')
plt.grid(True)
plt.show()

plt.figure(figsize=(12, 6))
df.groupby(df['discharge date'])['billing amount'].mean().plot()
plt.xlabel('discharge date')
plt.ylabel('Average Billing Amount')
plt.title('Line Chart of Average Billing Amount over discharge date')
plt.grid(True)
plt.xticks(rotation=45)
plt.show()

from wordcloud import WordCloud

doctors = df['doctor'].value_counts()
wordcloud = WordCloud(background_color='white').generate_from_frequencies(doctors)

plt.figure(figsize=(8, 8))
plt.imshow(wordcloud)
plt.axis('off')
plt.title('Word Cloud of Doctor Distribution')
plt.show()